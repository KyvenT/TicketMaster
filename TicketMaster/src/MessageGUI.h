#pragma once

#include <QWidget>
#include <QGridLayout>
#include <QLabel>
#include <memory>
#include "Ticket.h"

/**
 * @brief widget that displays data of Message
 * @author Ryan Lambe
 */
class MessageGUI : public QWidget {
public:
    /**
     * @brief Default constructor should never be used
     */
    MessageGUI() = delete;

    /**
     * @brief Creates widget that displays data of Message
     * @param data values are displayed in the widget
     * @param parent the parent widget the GUI should be attached to
     */
    MessageGUI(const Message& data, QWidget* parent);

private:

    /**
     * @brief Converts TimePoint to a std::string
     * @param timePoint value that should be displayed as a string
     * @return string representing the timePoint that was input
     */
    static std::string TimePointToString(std::chrono::time_point<std::chrono::system_clock> timePoint);

    /// grid layout to organize the elements displayed in the widget
    std::unique_ptr<QGridLayout> gridLayout;

    /// label that contains the name of the user that sent the message
    std::unique_ptr<QLabel> sender;
    /// label that contains the contents of the message that was sent
    std::unique_ptr<QLabel> message;
    /// label that contains the time that the message was sent as a string generated by TimePointToString
    std::unique_ptr<QLabel> time;
};
